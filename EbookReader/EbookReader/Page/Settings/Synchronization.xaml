<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:converter="clr-namespace:EbookReader.Converter"
             x:Class="EbookReader.Page.Settings.Synchronization"
             Title="Synchronization">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="Picker">
                <Setter Property="HorizontalOptions" Value="EndAndExpand"></Setter>
                <Setter Property="VerticalOptions" Value="Center"></Setter>
                <Setter Property="WidthRequest" Value="200"></Setter>
            </Style>

            <Style TargetType="Entry">
                <Setter Property="HorizontalOptions" Value="EndAndExpand"></Setter>
                <Setter Property="VerticalOptions" Value="Center"></Setter>
                <Setter Property="WidthRequest" Value="200"></Setter>
            </Style>

            <OnPlatform x:TypeArguments="Thickness" Android="10,0" WinPhone="10" x:Key="settingsWrapperPadding" />

            <Style x:Key="settingsWrapper" TargetType="StackLayout">
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="VerticalOptions" Value="Center" />
                <Setter Property="Padding" Value="{StaticResource settingsWrapperPadding}" />
            </Style>
            <Style TargetType="Label">
                <Setter Property="VerticalOptions" Value="Center" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <StackLayout HorizontalOptions="Fill">

            <StackLayout Style="{StaticResource settingsWrapper}">
                <Label Text="Synchronize" />
                <Switch IsToggled="{Binding Enabled}" />
            </StackLayout>

            <StackLayout IsVisible="{Binding Enabled}">
                <StackLayout Style="{StaticResource settingsWrapper}">
                    <Label Text="Only on WiFi" />
                    <Switch IsToggled="{Binding OnlyWifi}" />
                </StackLayout>

                <StackLayout Style="{StaticResource settingsWrapper}">
                    <Label Text="Device name" />
                    <Entry Text="{Binding DeviceName}" />
                </StackLayout>
                
                <StackLayout Style="{StaticResource settingsWrapper}">
                    <Label Text="Synchronization provider" />
                    <Picker ItemsSource="{Binding SynchronizationService.Items}" SelectedItem="{Binding SynchronizationService.Value}" />
                </StackLayout>
                <StackLayout IsVisible="{Binding SynchronizationService.Value, Converter={converter:EqualConverter}, ConverterParameter='Dropbox'}}">
                    <StackLayout Style="{StaticResource settingsWrapper}" IsVisible="{Binding IsConnected, Converter={converter:InverseBoolConverter}}">
                        <Button Text="Connect to Dropbox" Command="{Binding ConnectToDropboxCommand}" />
                    </StackLayout>
                    <StackLayout Style="{StaticResource settingsWrapper}" IsVisible="{Binding IsConnected}">
                        <Button Text="Disconnect" Command="{Binding DisconnectDropboxCommand}" />
                    </StackLayout>
                </StackLayout>
                <StackLayout IsVisible="{Binding SynchronizationService.Value, Converter={converter:EqualConverter}, ConverterParameter='Firebase'}}">
                    <StackLayout Style="{StaticResource settingsWrapper}">
                        <Label Text="E-mail" />
                        <Entry Text="{Binding Firebase.Email}" IsEnabled="{Binding Firebase.IsConnected, Converter={converter:InverseBoolConverter}}" />
                    </StackLayout>
                    <StackLayout Style="{StaticResource settingsWrapper}">
                        <Label Text="Password" />
                        <Entry Text="{Binding Firebase.Password}" IsEnabled="{Binding Firebase.IsConnected, Converter={converter:InverseBoolConverter}}" IsPassword="True" />
                    </StackLayout>
                    <StackLayout Style="{StaticResource settingsWrapper}" IsVisible="{Binding Firebase.IsConnected, Converter={converter:InverseBoolConverter}}">
                        <Button Text="Connect" Command="{Binding Firebase.ConnectCommand}" />
                        <Button Text="Lost password" Command="{Binding Firebase.ResetCommand}" />
                    </StackLayout>
                    <StackLayout Style="{StaticResource settingsWrapper}" IsVisible="{Binding Firebase.LoginFailed}">
                        <Label Text="Login failed. The password must be at least 6 characters long."></Label>
                    </StackLayout>
                    <StackLayout Style="{StaticResource settingsWrapper}" IsVisible="{Binding Firebase.IsConnected}">
                        <Button Text="Disconnect" Command="{Binding Firebase.DisconnectCommand}" />
                    </StackLayout>
                </StackLayout>
            </StackLayout>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>